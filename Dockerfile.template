ARG PRIMARY_HUB
FROM ${PRIMARY_HUB:-balenalib/%%BALENA_MACHINE_NAME%%-ubuntu-python:3.6-bionic}
ARG DBUS_SYSTEM_BUS_ADDRESS
ENV DBUS_SYSTEM_BUS_ADDRESS ${DBUS_SYSTEM_BUS_ADDRESS:-unix:path=/host/run/dbus/system_bus_socket}

# Deprecated INITSYSTEM as of balenalib major changes
# https://www.balena.io/docs/reference/base-images/base-images/#major-changes
# ENV INITSYSTEM On
# RUN [ "cross-build-start" ]

# ADD S6 Overlay
ARG S6_ARCH
ENV S6_ARCH ${S6_ARCH:-'%%BALENA_ARCH%%'}
ARG S6_RELEASE
ENV S6_RELEASE ${S6_RELEASE:-v2.0.0.1}
ENV S6_REPO https://github.com/just-containers/s6-overlay/releases/download
ADD ${S6_REPO}/${S6_RELEASE}/s6-overlay-${S6_ARCH}.tar.gz /tmp/
ADD ${S6_REPO}/${S6_RELEASE}/s6-overlay-${S6_ARCH}.tar.gz.sig /tmp/
RUN curl https://keybase.io/justcontainers/key.asc | gpg --import
WORKDIR /
RUN gunzip -c /tmp/s6-overlay-${S6_ARCH}.tar.gz | tar -xf - -C / && \
    gpg --verify /tmp/s6-overlay-${S6_ARCH}.tar.gz.sig /tmp/s6-overlay-${S6_ARCH}.tar.gz
# RUN tar xvzf /tmp/s6-overlay-${S6_ARCH}.tar.gz -C / --exclude="./bin" && \
#    tar xvzf /tmp/s6-overlay-${S6_ARCH}.tar.gz -C /usr ./bin

ENV UDEV on
# Install Systemd
RUN \
 echo "**** install systemd ****" && \
 apt-get update && \
 apt-get install -y \
 		systemd \
    systemd-sysv && \
 echo "**** cleanup ****" && \
 rm -rf \
	/tmp/* \
	/var/lib/apt/lists/* \
	/var/tmp/*

# docker systemctl replacement - allows to deploy to systemd-controlled containers without starting an actual systemd daemon (e.g. centos7, ubuntu16)
# https://github.com/gdraheim/docker-systemctl-replacement/blob/master/INIT-DAEMON.md
COPY scripts/systemctl3.py /usr/bin/systemctl
RUN chmod g+xs /usr/bin/systemctl

ENV DEBIAN_FRONTEND noninteractive
ARG DEBUG
ENV DEBUG ${DEBUG:-0}

ENV PRIV_INT wlan0
ENV PRIV_NETWORK 10.3.0
ENV PRIV_NETWORK_MASK 255.255.255.0
ENV PRIV_NETWORK_MASKb 24
ENV WAN_NETWORK 192.168.1
ENV WAN_NETWORK_MASK 255.255.255.0
ENV WAN_NETWORK_MASKb 24
ENV WAN_INT wlan1
ARG AP_SSID
ENV PRIV_SSID ${AP_SSID:-'MyHotspot'}
ARG AP_PASSWORD
ENV PRIV_PASSWD ${AP_PASSWORD:-'1passWoRd'}
ENV PRIV_WIFI_MODE a
ENV PRIV_WIFI_CTY FR
ENV PRIV_WIFI_CHANNEL 36
ENV DNS1 192.168.1.1
ENV DNS2 8.8.8.8
ARG WIFI_SSID
ENV WAN_SSID ${WIFI_SSID:-'HomeWifi'}
ARG WIFI_PASSWORD
ENV WAN_PASSWD ${WIFI_PASSWORD:-'1passWoRd'}
ENV DNS1_IPV6 2001:4860:4860::8888
ENV DNS2_IPV6 2001:4860:4860::8844
ENV PRIV_RANGE_START 2
ENV PRIV_RANGE_END 253
ENV PRIV_NETWORK_IPV6 2a01:e0a:16b:dc30::
ENV PRIV_NETWORK_MASKb6 64
ENV WAN_NETWORK_IPV6 2a01:db8:0:1::
ENV WAN_NETWORK_MASKb6 64

RUN \
 echo "**** install runtime packages ****" && \
 apt-get update && \
 apt-get install -y \
   network-manager \
	 hostapd \
	 bridge-utils \
	 isc-dhcp-server \
	 iptables \
	 ufw \
	 wpasupplicant \
	 netplan \
	 dnsmasq \
	 python3 \
   tcpdump \
   npm \
   && \
 echo "**** cleanup ****" && \
 rm -rf \
	/tmp/* \
	/var/lib/apt/lists/* \
	/var/tmp/*

# Node node_modules
RUN npm update && npm link balena-cloud

# add local files
COPY root/ /

WORKDIR /usr/src/

COPY scripts/ scripts/
COPY library/ library/
RUN chmod -R 4755 scripts library \
  && cp scripts/init.d/hapwizard /etc/init.d/.

VOLUME /etc/hostapd/
VOLUME /etc/hapwizard/

ENTRYPOINT /init
# RUN [ "cross-build-end" ]

CMD /etc/init.d/hapwizard foreground
